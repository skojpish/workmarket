from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
from aiogram.utils.keyboard import InlineKeyboardBuilder

from handlers.callback_factories import TimePickerCF


def example_kb() -> InlineKeyboardMarkup:
    kb = InlineKeyboardBuilder()
    kb.add(InlineKeyboardButton(
        text="–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –æ–±—Ä–∞–∑–µ—Ü", callback_data="example"
    ))
    kb.adjust(1)
    return kb.as_markup()


def back_user_text_kb() -> InlineKeyboardMarkup:
    kb = InlineKeyboardBuilder()
    kb.add(InlineKeyboardButton(
        text="–ù–∞–∑–∞–¥", callback_data="user_text_back"
    ))
    kb.adjust(1)
    return kb.as_markup()


def photo_user_kb() -> InlineKeyboardMarkup:
    kb = InlineKeyboardBuilder()
    kb.add(InlineKeyboardButton(
        text="–ë–µ–∑ —Ñ–æ—Ç–æ", callback_data="without_photo_user"
    ))
    kb.adjust(1)
    return kb.as_markup()


def end_scheduled_user_kb(data) -> InlineKeyboardMarkup:
    kb = InlineKeyboardBuilder()
    kb.add(InlineKeyboardButton(
        text="–û–ø–ª–∞—Ç–∏—Ç—å –∏ —Ä–∞–∑–º–µ—Å—Ç–∏—Ç—å", callback_data="payment_methods"
    ))
    kb.add(InlineKeyboardButton(
        text="–ò–∑–º–µ–Ω–∏—Ç—å —Ç–µ–∫—Å—Ç", callback_data="edit_sch_text_user"
    ))
    if 'photo' in data:
        kb.add(InlineKeyboardButton(
            text="–ü–æ–º–µ–Ω—è—Ç—å —Ñ–æ—Ç–æ", callback_data="edit_sch_photo_user"
        ))
    kb.add(InlineKeyboardButton(
        text="–ò–∑–º–µ–Ω–∏—Ç—å –¥–∞—Ç—É –∏ –≤—Ä–µ–º—è", callback_data="edit_sch_datetime"
    ))
    kb.adjust(1)
    return kb.as_markup()


def edit_final_kb() -> InlineKeyboardMarkup:
    kb = InlineKeyboardBuilder()
    kb.add(InlineKeyboardButton(
        text="–ü–µ—Ä–µ–π—Ç–∏ –∫ –∑–∞—è–≤–∫–µ", callback_data="back_to_order"
    ))
    kb.adjust(1)
    return kb.as_markup()


def edit_posts_kb() -> InlineKeyboardMarkup:
    kb = InlineKeyboardBuilder()
    kb.button(
        text="–û—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —Å–æ–¥–µ—Ä–∂–∞–Ω–∏–µ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏", callback_data="edit_post"
    )
    kb.adjust(1)
    return kb.as_markup()


def channel_msg_links_kb(country) -> InlineKeyboardMarkup:
    kb = InlineKeyboardBuilder()
    kb.add(InlineKeyboardButton(
        text="üåè–°–ï–¢–¨ –ö–ê–ù–ê–õ–û–í‚ÜóÔ∏è", url='https://t.me/workmarket_goroda'
    ))
    if country == "–†–æ—Å—Å–∏—è":
        kb.add(InlineKeyboardButton(
            text="üì©–†–ê–ó–ú–ï–°–¢–ò–¢–¨ –ü–£–ë–õ–ò–ö–ê–¶–ò–Æ‚ÜóÔ∏è", url='https://t.me/WorkMarketsBot'
        ))
    elif country == "–ë–µ–ª–∞—Ä—É—Å—å":
        kb.add(InlineKeyboardButton(
            text="üì©–†–ê–ó–ú–ï–°–¢–ò–¢–¨ –ü–£–ë–õ–ò–ö–ê–¶–ò–Æ‚ÜóÔ∏è", url='https://t.me/Workmarket_rb_bot'
        ))
    else:
        pass
    kb.adjust(1)
    return kb.as_markup()


def package_confirm_kb() -> InlineKeyboardMarkup:
    kb = InlineKeyboardBuilder()
    kb.button(
        text="–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –∏ –æ–ø–ª–∞—Ç–∏—Ç—å", callback_data="payment_methods"
    )
    kb.button(
        text="–ù–∞–∑–∞–¥", callback_data="buy_package"
    )
    kb.adjust(1)
    return kb.as_markup()


def pin_package_confirm_kb() -> InlineKeyboardMarkup:
    kb = InlineKeyboardBuilder()
    kb.button(
        text="–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –∏ –æ–ø–ª–∞—Ç–∏—Ç—å", callback_data="payment_methods"
    )
    kb.adjust(1)
    return kb.as_markup()


def time_manually_kb() -> InlineKeyboardMarkup:
    kb = InlineKeyboardBuilder()
    kb.button(
        text="–ù–∞–∑–∞–¥", callback_data="time_back"
    )
    kb.adjust(1)
    return kb.as_markup()


def time_manually_confirm_kb() -> InlineKeyboardMarkup:
    kb = InlineKeyboardBuilder()
    kb.button(
        text="–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å", callback_data=TimePickerCF(up_hour=False, down_hour=False, up_min=False,
                                                       down_min=False, confirm=True, value=0, hour_cur=0,
                                                       minute_cur=0)
    )
    kb.button(
        text="–í–≤–µ—Å—Ç–∏ –¥—Ä—É–≥–æ–µ –≤—Ä–µ–º—è", callback_data="time_back"
    )
    kb.adjust(1)
    return kb.as_markup()
